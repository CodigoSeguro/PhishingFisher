//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PhishingFisher.es.codigoseguro {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback insertAllSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertVIPSOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectAllSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectAllNewSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAllSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectDangerSiteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::PhishingFisher.Properties.Settings.Default.PhishingFisher_es_codigoseguro_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event insertAllSitesCompletedEventHandler insertAllSitesCompleted;
        
        /// <remarks/>
        public event insertVIPSCompletedEventHandler insertVIPSCompleted;
        
        /// <remarks/>
        public event selectAllSitesCompletedEventHandler selectAllSitesCompleted;
        
        /// <remarks/>
        public event selectAllNewSitesCompletedEventHandler selectAllNewSitesCompleted;
        
        /// <remarks/>
        public event updateAllSitesCompletedEventHandler updateAllSitesCompleted;
        
        /// <remarks/>
        public event selectDangerSiteCompletedEventHandler selectDangerSiteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertAllSites", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertAllSites(string webURL, int Danger, string Cloned) {
            this.Invoke("insertAllSites", new object[] {
                        webURL,
                        Danger,
                        Cloned});
        }
        
        /// <remarks/>
        public void insertAllSitesAsync(string webURL, int Danger, string Cloned) {
            this.insertAllSitesAsync(webURL, Danger, Cloned, null);
        }
        
        /// <remarks/>
        public void insertAllSitesAsync(string webURL, int Danger, string Cloned, object userState) {
            if ((this.insertAllSitesOperationCompleted == null)) {
                this.insertAllSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertAllSitesOperationCompleted);
            }
            this.InvokeAsync("insertAllSites", new object[] {
                        webURL,
                        Danger,
                        Cloned}, this.insertAllSitesOperationCompleted, userState);
        }
        
        private void OninsertAllSitesOperationCompleted(object arg) {
            if ((this.insertAllSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertAllSitesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertVIPS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertVIPS(string id, string webURL, string HTML_BODY, string LAST_HTML_CHECK, string SSL_KEY, string SSL_EXPIRATION_DATE) {
            this.Invoke("insertVIPS", new object[] {
                        id,
                        webURL,
                        HTML_BODY,
                        LAST_HTML_CHECK,
                        SSL_KEY,
                        SSL_EXPIRATION_DATE});
        }
        
        /// <remarks/>
        public void insertVIPSAsync(string id, string webURL, string HTML_BODY, string LAST_HTML_CHECK, string SSL_KEY, string SSL_EXPIRATION_DATE) {
            this.insertVIPSAsync(id, webURL, HTML_BODY, LAST_HTML_CHECK, SSL_KEY, SSL_EXPIRATION_DATE, null);
        }
        
        /// <remarks/>
        public void insertVIPSAsync(string id, string webURL, string HTML_BODY, string LAST_HTML_CHECK, string SSL_KEY, string SSL_EXPIRATION_DATE, object userState) {
            if ((this.insertVIPSOperationCompleted == null)) {
                this.insertVIPSOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertVIPSOperationCompleted);
            }
            this.InvokeAsync("insertVIPS", new object[] {
                        id,
                        webURL,
                        HTML_BODY,
                        LAST_HTML_CHECK,
                        SSL_KEY,
                        SSL_EXPIRATION_DATE}, this.insertVIPSOperationCompleted, userState);
        }
        
        private void OninsertVIPSOperationCompleted(object arg) {
            if ((this.insertVIPSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertVIPSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectAllSites", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] selectAllSites(string webURL) {
            object[] results = this.Invoke("selectAllSites", new object[] {
                        webURL});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void selectAllSitesAsync(string webURL) {
            this.selectAllSitesAsync(webURL, null);
        }
        
        /// <remarks/>
        public void selectAllSitesAsync(string webURL, object userState) {
            if ((this.selectAllSitesOperationCompleted == null)) {
                this.selectAllSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectAllSitesOperationCompleted);
            }
            this.InvokeAsync("selectAllSites", new object[] {
                        webURL}, this.selectAllSitesOperationCompleted, userState);
        }
        
        private void OnselectAllSitesOperationCompleted(object arg) {
            if ((this.selectAllSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectAllSitesCompleted(this, new selectAllSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectAllNewSites", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CrawlerBait[] selectAllNewSites() {
            object[] results = this.Invoke("selectAllNewSites", new object[0]);
            return ((CrawlerBait[])(results[0]));
        }
        
        /// <remarks/>
        public void selectAllNewSitesAsync() {
            this.selectAllNewSitesAsync(null);
        }
        
        /// <remarks/>
        public void selectAllNewSitesAsync(object userState) {
            if ((this.selectAllNewSitesOperationCompleted == null)) {
                this.selectAllNewSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectAllNewSitesOperationCompleted);
            }
            this.InvokeAsync("selectAllNewSites", new object[0], this.selectAllNewSitesOperationCompleted, userState);
        }
        
        private void OnselectAllNewSitesOperationCompleted(object arg) {
            if ((this.selectAllNewSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectAllNewSitesCompleted(this, new selectAllNewSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateAllSites", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateAllSites(int similarity, int Danger, string Cloned, int ID) {
            this.Invoke("updateAllSites", new object[] {
                        similarity,
                        Danger,
                        Cloned,
                        ID});
        }
        
        /// <remarks/>
        public void updateAllSitesAsync(int similarity, int Danger, string Cloned, int ID) {
            this.updateAllSitesAsync(similarity, Danger, Cloned, ID, null);
        }
        
        /// <remarks/>
        public void updateAllSitesAsync(int similarity, int Danger, string Cloned, int ID, object userState) {
            if ((this.updateAllSitesOperationCompleted == null)) {
                this.updateAllSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAllSitesOperationCompleted);
            }
            this.InvokeAsync("updateAllSites", new object[] {
                        similarity,
                        Danger,
                        Cloned,
                        ID}, this.updateAllSitesOperationCompleted, userState);
        }
        
        private void OnupdateAllSitesOperationCompleted(object arg) {
            if ((this.updateAllSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAllSitesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectDangerSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int selectDangerSite(string webURL) {
            object[] results = this.Invoke("selectDangerSite", new object[] {
                        webURL});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void selectDangerSiteAsync(string webURL) {
            this.selectDangerSiteAsync(webURL, null);
        }
        
        /// <remarks/>
        public void selectDangerSiteAsync(string webURL, object userState) {
            if ((this.selectDangerSiteOperationCompleted == null)) {
                this.selectDangerSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectDangerSiteOperationCompleted);
            }
            this.InvokeAsync("selectDangerSite", new object[] {
                        webURL}, this.selectDangerSiteOperationCompleted, userState);
        }
        
        private void OnselectDangerSiteOperationCompleted(object arg) {
            if ((this.selectDangerSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectDangerSiteCompleted(this, new selectDangerSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <comentarios/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <comentarios/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CrawlerBait {
        
        private string webURLField;
        
        private string wasAGoodDayField;
        
        private string xMLDataField;
        
        private string clonedField;
        
        private int regIDField;
        
        private int similarityField;
        
        private string sSL_KEYField;
        
        private System.DateTime sSL_EXPIRATION_DATEField;
        
        /// <comentarios/>
        public string WebURL {
            get {
                return this.webURLField;
            }
            set {
                this.webURLField = value;
            }
        }
        
        /// <comentarios/>
        public string wasAGoodDay {
            get {
                return this.wasAGoodDayField;
            }
            set {
                this.wasAGoodDayField = value;
            }
        }
        
        /// <comentarios/>
        public string XMLData {
            get {
                return this.xMLDataField;
            }
            set {
                this.xMLDataField = value;
            }
        }
        
        /// <comentarios/>
        public string cloned {
            get {
                return this.clonedField;
            }
            set {
                this.clonedField = value;
            }
        }
        
        /// <comentarios/>
        public int regID {
            get {
                return this.regIDField;
            }
            set {
                this.regIDField = value;
            }
        }
        
        /// <comentarios/>
        public int similarity {
            get {
                return this.similarityField;
            }
            set {
                this.similarityField = value;
            }
        }
        
        /// <comentarios/>
        public string SSL_KEY {
            get {
                return this.sSL_KEYField;
            }
            set {
                this.sSL_KEYField = value;
            }
        }
        
        /// <comentarios/>
        public System.DateTime SSL_EXPIRATION_DATE {
            get {
                return this.sSL_EXPIRATION_DATEField;
            }
            set {
                this.sSL_EXPIRATION_DATEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void insertAllSitesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void insertVIPSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void selectAllSitesCompletedEventHandler(object sender, selectAllSitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectAllSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectAllSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void selectAllNewSitesCompletedEventHandler(object sender, selectAllNewSitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectAllNewSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectAllNewSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CrawlerBait[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CrawlerBait[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void updateAllSitesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void selectDangerSiteCompletedEventHandler(object sender, selectDangerSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectDangerSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectDangerSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591